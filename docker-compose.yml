version: '3.5'

services:

  db:
    container_name: neo4j-db
    image: neo4j:3.5
    restart: unless-stopped
    ports:
      - "7687:7687"
      - "7474:7474"
    volumes:
      - ./db/db:/data
      - ./db/db_logs:/logs
      - ./db/db_import:/var/lib/neo4j/import
      - ./db/db_plugins:/plugins
    environment:
      - NEO4J_AUTH=neo4j/test
      - NEO4J_HEAP_MEMORY=8G
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4j_dbms_memory_heap_initial__size=4G
      - NEO4j_dbmd_memory_heap_max__size=16G

  flask-app:
    container_name: flask-api
    restart: unless-stopped
    build:
      context: ./backend/
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/usr/src/app
    depends_on:
      - "db"

  react-app:
    container_name: react-ui
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - './frontend:/usr/src/app'
      - '/usr/src/app/node_modules'
    links:
        - "graphql-api:gql-api"
    ports:
      - '3000:3000'
    depends_on:
      - "flask-app"
      - "graphql-api"
    environment:
      - NODE_ENV=development

    
  graphql-api:
    container_name: graphql-api
    build:
      context: ./graphql
      dockerfile: Dockerfile
    volumes:
      - './graphql:/usr/src/app'
      - '/usr/src/app/node_modules'
    links:
        - "db:database"
    ports:
      - '8000:8000'
    depends_on:
      - "db"
    environment:
      - NODE_ENV=development
      - DEBUG=neo4j-graphql-js
      - NEO4J_USER=neo4j
      - NEO4J_PASS=test
      - NEO$J_HOST=database
